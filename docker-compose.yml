# version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - DEBUG=1
    volumes:
      - localstack_data:/tmp/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/ecommerce
      - AWS_S3_ENDPOINT=http://localstack:4566
    depends_on:
      - mongodb
      - localstack
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/usr/src/app
      - /usr/src/app/node_modules
    networks:
      - app-network

  serverless:
    build:
      context: ./serverless
      dockerfile: Dockerfile
    container_name: serverless
    ports:
      - "3001:3001"
    volumes:
      - ./serverless:/app
      - /app/node_modules
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/ecommerce
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - AWS_S3_ENDPOINT=http://localstack:4566
      - NODE_ENV=development
    depends_on:
      - mongodb
      - localstack
    networks:
      - app-network

volumes:
  mongodb_data:
  localstack_data:

networks:
  app-network:
    driver: bridge
